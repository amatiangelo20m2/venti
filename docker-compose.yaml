version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
  db20m2:
    container_name: db20m2
    image: postgres:alpine
    environment:
      POSTGRES_DB: db20m2
      POSTGRES_USER: zLw473vAW8ELDkV
      POSTGRES_PASSWORD: QyuhTTLOCOWfdFu
      PGDATA: /data/postgres
    volumes:
      - ./db20m2data:/data/postgres
    expose:
      - "5435"
    ports:
      - "5435:5435"
    command: -p 5435
    restart: always

  pgadmin20m2:
    container_name: pgadmin20m2
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: amati.angelo90@gmail.com
      PGADMIN_DEFAULT_PASSWORD: EM6MbK55bpHUtgVN
    depends_on:
      - db20m2
    ports:
      - "5050:80"

#  discovery-server:
#    image: amatiangelo1990/20m2:discovery-server
#    container_name: discovery-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - zipkin
#  api-gw:
#    image: amatiangelo1990/20m2:api-gw
#    container_name: api-gw
#    ports:
#      - "8088:8088"
#    expose:
#      - "8088"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
#    depends_on:
#      - zipkin
#      - discovery-server
##      - keycloak
#  auth-service:
#    image: amatiangelo1990/20m2:auth-service
#    container_name: auth-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
#    depends_on:
#      - zipkin
#      - discovery-server
#      - api-gw
#  ventimetri-service:
#    image: amatiangelo1990/20m2:ventimetri-service
#    container_name: ventimetri-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
#    depends_on:
#      - zipkin
#      - discovery-server
#      - api-gw

volumes:
  data: {}
  pg_data:

#networks:
#  db20m2:
